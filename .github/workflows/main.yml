name: Main workflow

on:
  push:
    branches:
      - "**"

#env:

jobs:
  ##################################################################################################
  ############### CHECKS ###########################################################################
  ##################################################################################################

  run_checks:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        command:
          [
            "make check-end-of-file-fixer",
            "make check-prettier",
            "make check-ruff",
            "make check-trailing-whitespace",
          ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv .venv-checks
          source .venv-checks/bin/activate
          pip install -r requirements.txt

      - name: Run command
        env:
          PATH: .venv-checks/bin:${{ env.PATH }}
        run: |
          source .venv-checks/bin/activate
          ${{ matrix.command }}

  ##################################################################################################
  ############### UNIT TESTS #######################################################################
  ##################################################################################################

  run_unit_tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Run unit tests
        env:
          PYTHONPATH: src:${{ env.PYTHONPATH }}
        run: |
          source .venv/bin/activate
          pytest tests/unit

  ##################################################################################################
  ############### INTEGRATION TESTS ################################################################
  ##################################################################################################

  run_integration_tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Run integration tests
        env:
          PYTHONPATH: src:${{ env.PYTHONPATH }}
        run: |
          source .venv/bin/activate
          pytest tests/integration
